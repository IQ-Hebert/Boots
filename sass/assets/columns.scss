//!////////////
// Flex Columns
// -- Generates a flex based column layout. The columns are highly configable.
// -- $class - string - The class name of the columns wraper.
// -- $number - int - The number of columns.
// -- $gutter - unit - The gutter space between columns.
// -- $width - unit - Min width of a column.
// -- $break - bool - Toggle for auto generated breakpoints.
// -- $col - string - The class name of the column.

@mixin _columns($class,$gutter,$number:12,$break:true,$col:'col')
{	
	$size: $width_max - $layout_left - $layout_right;
	$width: $size/$number;
	
	.#{$class}{
	    display: -ms-flexbox;
		display: flex;
		
		-ms-flex-flow: row wrap;
		flex-flow: row wrap;
		
		flex-wrap: wrap;
		
		margin-top: -$gutter;
		margin-left: -$gutter/2;
		margin-right: -$gutter/2;
		
		$i: 0;
		@while $i < $number
		{
			$i: $i + 1;
			&.c_#{$i} > .#{$col}{width: percentage(1/$i)}
		}
		
		> .clr{
		    display: -ms-flexbox;
			display: flex;
			order: 2;
		}
		
		.#{$col}{
			position: relative;
			
			@if $width != false {min-width: $width;}
			
			padding: 0 $gutter/2;
			margin-top: $gutter;
			
			order: 2;
			
			&.right{margin-left: auto}
			&.left{margin-right: auto}			
			&.center{
				margin-left: auto;
				margin-right: auto;
			}
			
			$i: 0;
			$not: '';
			@while $i < $number
			{
				$i: $i + 1;
				
				$w: percentage($i/$number);
				$not: $not + ':not(.s_'+$i+')';
				
				&.s_#{$i}{width: $w}
				&.o_#{$i}{margin-left: $w}
			}
			
			&.full{
				width: 100%;
			}
			
			&.half{
				width: 50%;
			}
			
			&.no_grow{
				width: auto;
				flex-grow: 0;
			}
			
			&.shrink{
				flex-shrink: 1;
			}
			
			&#{$not}:not(.no_grow),&.grow{
				flex-grow: 1;
			}
		}
	}
	
	@if($width != false and $break == true)
	{
		$i: 0; // Loop 1 - Zero to column count
		
		@while $i < $number
		{
			$i: $i + 1;
			
			$max: floor($width * $i) + $layout_left + $layout_right;	
			$min: floor($width * ($i - 1) * 1.00001) + $layout_left + $layout_right;	
			
			@debug _strip($max * 16 * 1px);
					
			$o: floor($number / $i); // Offset
			$s: percentage($o / $number); // Offset Size
			
			@media only screen and (max-width:$max) and (min-width:$min)
			{
				$n: 0; // Loop 2 - Zero to column count
				
				@while $n < $number
				{
					$n: $n + 1;
					
					$c: round($n / $o);
					@if($c < 1){$c: 1};
					
					$oc: $c - 1;
					@if($oc < 1){$oc: 1};
					
					.#{$class} .#{$col}
					{						
						@if($n / $o > $i)
						{
							&.s_#{$n}{width: 100%}
						} @else {
							&.s_#{$n}{width: $s * $c}				
						}
						
						&.o_#{$n}{margin-left: $s * $oc}	
					}
				}
			}
		}
	}
}

// Generate Columns
@include _columns('columns',$spacer_s);